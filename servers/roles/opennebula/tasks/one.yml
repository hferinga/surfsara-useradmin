- name: Enable remote authentication
  lineinfile:
    dest: /etc/one/sunstone-server.conf
    regexp: "^:auth:"
    line: ":auth: remote"
  register: enable_remote_auth
  notify: restart apache
  tags:
    - one

- name: Restart opennebula/apache
  service: name={{ item }} state=restarted
  when: env in ['development', 'acceptance'] and enable_remote_auth.changed
  with_items:
    - opennebula
    - apache2
  tags:
    - one

- name: Show password column in admin view
  lineinfile:
    dest: /etc/one/sunstone-views/admin.yaml
    regexp: "- 5         # Password"
    line: "            - 5         # Password"
  notify: restart apache
  tags:
    - one

- name: Disable User.update_password
  lineinfile:
      dest: /etc/one/sunstone-views/{{ item }}.yaml
      regexp: "User.update_password:"
      line: "            User.update_password: false"
  with_items:
    - admin
    - admin_vcenter
    - cloud
    - cloud_vcenter
    - groupadmin
    - groupadmin_vcenter
    - user
  notify: restart apache
  tags:
    - one

- name: Disable Settings.change_password
  lineinfile:
      dest: /etc/one/sunstone-views/{{ item }}.yaml
      regexp: "Settings.change_password:"
      line: "            Settings.change_password: false"
  with_items:
    - admin
    - admin_vcenter
    - cloud
    - cloud_vcenter
    - groupadmin
    - groupadmin_vcenter
    - user
  notify: restart apache
  tags:
    - one

- name: Create OpenNebula API user
  shell: oneuser create useradmin useradmin
  when: env in ['development', 'acceptance']
  register: command_result
  failed_when: "'UserAllocate' in command_result.stderr and 'NAME is already taken by USER' not in command_result.stderr"
  changed_when: "command_result.rc == 0"
  tags:
    - one

- name: Grant OpenNebula API user access to manage users & groups
  shell: "oneacl create '#2 USER+GROUP/* USE+MANAGE+ADMIN+CREATE *'"
  when: env in ['development', 'acceptance']
  register: command_result
  failed_when: "'AclAddRule' in command_result.stderr and 'already exists' not in command_result.stderr"
  changed_when: "command_result.rc == 0"
  tags:
    - one

- name: Create OpenNebula development test users
  shell: oneuser create {{item}} {{item}} --driver public
  with_items:
    - admin
    - user
  when: env == 'development'
  register: create_users
  failed_when: "'UserAllocate' in create_users.stderr and 'NAME is already taken by USER' not in create_users.stderr"
  changed_when: "create_users.rc == 0"
  tags:
    - one

- name: Create OpenNebula acceptance test users
  shell: oneuser create {{item}} {{item}} --driver public
  with_items:
    - isaac
    - jweeler
    - student21
    - teacher10
  when: env == 'acceptance'
  register: create_users
  failed_when: "'UserAllocate' in create_users.stderr and 'NAME is already taken by USER' not in create_users.stderr"
  changed_when: "create_users.rc == 0"
  tags:
    - one

- name: Put development admin in oneadmin group
  shell: oneuser chgrp admin oneadmin
  when: env == 'development' and create_users.changed
  tags:
    - one

- name: Put acceptance admin in oneadmin group
  shell: oneuser chgrp isaac oneadmin
  when: env == 'acceptance' and create_users.changed
  tags:
    - one
