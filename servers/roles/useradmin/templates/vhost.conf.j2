<VirtualHost *:80>
  ServerName    {{ virtual_host }}
  DocumentRoot /var/www/useradmin/current/public

  RewriteEngine On
  RewriteCond %{HTTPS} off
  RewriteRule (.*) https://%{SERVER_NAME}$1 [R,L]
</VirtualHost>

<VirtualHost *:443>
  ServerName    {{ virtual_host }}
  ServerAdmin tech+surfsara.useradmin@zilverline.com

  DocumentRoot /var/www/useradmin/current/public

  SSLEngine on
  SSLCertificateFile {{ ssl.cert }}
  SSLCertificateKeyFile {{ ssl.key }}

  {% if env == 'acceptance' %}
    Include /etc/letsencrypt/options-ssl-apache.conf
  {% endif %}

  <Location ~ "/useradmin/(splash|assets/*)">
    Satisfy Any
    Allow from all
    AuthType None
    Require all granted
  </Location>

  <Location />
    AuthType shibboleth
    ShibRequestSetting requireSession 1
    Require valid-user
  </Location>

  Alias /useradmin /var/www/useradmin/current/public
  <Location /useradmin>
    PassengerBaseURI /useradmin
    PassengerAppRoot /var/www/useradmin/current
    PassengerMinInstances 4

    RackEnv {{env}}

    ErrorDocument 500 "500 Internal Server Error"
    ErrorDocument 404 "404 Not Found"
    ErrorDocument 403 "403 Access Denied"
  </Location>
  <Directory /var/www/useradmin/current/public>
    AllowOverride all
    Require all granted
  </Directory>

  <LocationMatch "^/(?!useradmin)">
    ProxyPass "{{ one.sunstone_url }}"
    ProxyPassReverse "{{ one.sunstone_url }}"

    RequestHeader set Remote-User "%{REMOTE_USER}s"
  </LocationMatch>
</VirtualHost>

Listen 2633
<VirtualHost *:2633>
  ServerName {{ virtual_host }}

  SSLEngine on
  SSLCertificateFile {{ ssl.cert }}
  SSLCertificateKeyFile {{ ssl.key }}

  {% if env == 'acceptance' %}
    Include /etc/letsencrypt/options-ssl-apache.conf
  {% endif %}

  <LocationMatch "^/.*">
    ProxyPass "{{ one.xml_rpc_url }}"
    ProxyPassReverse "{{ one.xml_rpc_url }}"
  </LocationMatch>
</VirtualHost>
